JUEVES 15/02:
	Planteamiento del proyecto: objetivos, condiciones, algoritmo y funciones necesarias.

	EMPEZAR CON:
		- .h
		- Makefile
		- Gestion de errores

LUNES 19/02:
	
	Notas:
		- Usar linked_lists para stacks

	Gestion de errores:
		Opcion 1:
			- 0 argumentos -> FIN
			- 1 argumento -> Evaluar
			- +1 argumento -> Juntar en uno y Evaluar
		
		Opcion 2:
			- 0 argumentos -> FIN
			- 1 argumento -> Evaluar
			- +1 argumento -> Evaluar y siempre que no haya error juntar

MARTES 20/02:

	Cambios:
		- Definido el proceso de gestion de errores
		- Reorganizacion de notas en notas y changelog

SABADO 24/02:

	TAREAS:
		- Funciones error_checker

	Cambios:
		- Funciones errores escritas (falta pushNumber)

DOMINGO 25/02:

	TAREAS:
		- Comprobar funciones error

	Cambios:
		- Funciones ft_nextElement y ft_checkElement comprobadas

	Seguir con:
		- Escribir pushElement
			- linked_lists

LUNES 26/02:

	Cambios:
		- Escrita y comprobada ft_puhsNumber
		- Añadido stack en argumentos ft_checkErrors

LUNES 04/03:

	Cambios:
		- Antes de pushear numero checkearlo

	Seguir con :
		- Modificar atoi para que compruebe si el numero esta dentro de los limites de int
		- Terminar de escribir check_number

SABADO 09/03:

	Cambios:
		- check_number descartado
		- sustituido atoi por atol (trabajar con longs) para comprobar tamaño (num = int)
		- funcion ft_checkPush : Agrupa comprobacion de elemento y pusheralo
			- pushNumber ahora en ft_checkPush
		- todas las funciones que trabajan con la lista tienen como parametro (int_list **stack)

	Notas:
		- que pasa si metemos numeros directamente??

	Seguir con:
		- comprobar push en check_push

DOMINGO 10/03:

	Cambios:
		- modificados los parametros de las funciones de listas:
			Si modifican la lista -> int_list **list
			Si solo iteran o imprimen -> int list *head
		- rehecho checkErrors_main.c: inicializado stackA y headA y comprobar su liberacion
		- Añadido ft_freeList para liberar la lista en caso de error
		- Eliminada comprobacion de stack(innecesaria) de check_push y otras funciones
		- renombrado archivo de gestion de errores: ft_check_errors -> error_handling
		- GESTION DE ERRORES TERMINADA!!
	
	Seguir con:
		- limpiar lineas de debug?
		- Planteamiento de algoritmo y busqueda de optimizacion
	